load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_proto_library")
load("@com_google_protobuf//:protobuf.bzl", "py_proto_library")
load("@rules_foreign_cc//tools/build_defs:cmake.bzl", "cmake_external")

proto_library(
    name = "market_data_proto",
    srcs = ["market_data.proto"],
    deps = ["@com_google_protobuf//:timestamp_proto"],
)

cc_proto_library(
    name = "market_data_cc_proto",
    deps = [":market_data_proto"],
)

py_proto_library(
    name = "market_data_py_proto",
    srcs = ["market_data.proto"],
    deps = ["@com_google_protobuf//:protobuf_python"],
)

py_binary(
    name = "scraper",
    srcs = ["scraper.py"],
    deps = [
        ":market_data_py_proto",
    ],
)

cc_library(
    name = "dhist",
    srcs = ["lib/DynamicHistogram/cpp/src/DynamicHistogram.cpp"],
    hdrs = ["lib/DynamicHistogram/cpp/src/DynamicHistogram.h"],
    copts = ["-std=c++17"]
)

cc_binary(
    name = "simulate",
    srcs = ["simulate.cpp"],
    deps = [
      ":dhist",
    ],
    linkopts = ["-lpthread"],
)

cc_binary(
    name = "backtest",
    srcs = ["backtest.cpp"],
    deps = [
        ":market_data_cc_proto",
    ],
    linkopts = ["-lpthread"],
    copts = ["-std=c++17"]
)

cc_library(
    name = "portfolio",
    srcs = [],
    hdrs = ["portfolio.h"],
    deps = [
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "portfolio_test",
    srcs = ["portfolio_test.cpp"],
    deps = [
        ":portfolio",
        "@gtest//:gtest",
        "@gtest//:gtest_main"
    ],
)

cc_library(
    name = "strategy",
    srcs = [],
    hdrs = ["strategy.h"],
    deps = [
        ":portfolio",
        "@com_github_google_glog//:glog"
    ],
)

cc_test(
    name = "strategy_test",
    srcs = ["strategy_test.cpp"],
    deps = [
        ":strategy",
        "@gtest//:gtest",
        "@gtest//:gtest_main"
    ],
)

cc_library(
    name = "feed",
    srcs = [],
    hdrs = ["feed.h"],
    deps = [
        ":market_data_cc_proto",
        ":portfolio",
        "@com_github_google_glog//:glog"
    ],
)

cc_test(
    name = "feed_test",
    srcs = ["feed_test.cpp"],
    deps = [
        ":feed",
        "@gtest//:gtest",
        "@gtest//:gtest_main"
    ],
)

cc_library(
    name = "util",
    srcs = [],
    hdrs = ["util.h"],
    deps = [
        "@com_github_google_glog//:glog"
    ],
)

cc_test(
    name = "util_test",
    srcs = ["util_test.cpp"],
    deps = [
        ":util",
        "@gtest//:gtest",
        "@gtest//:gtest_main"
    ],
)
